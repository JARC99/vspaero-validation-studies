void main()
{
    Print( string( "-> Begin TestVSPAeroSharpTrailingEdge" ) );
    Print( string( "" ) );

    //==== Analysis: VSPAero Single Point ====//
    string analysis_name = "VSPAEROSinglePoint";
    Print( analysis_name );

    // Open the file
	string fname = "validation_2.vsp3";
    ReadVSPFile( fname ); // Sets VSP3 file name
    Update();

    //==== Analysis: VSPAero Compute Geometry to Create Vortex Lattice DegenGeom File ====//
    string compgeom_name = "VSPAEROComputeGeometry";
    Print( compgeom_name );

    // Set defaults
    SetAnalysisInputDefaults( compgeom_name );

    // list inputs, type, and current values
    PrintAnalysisInputs( compgeom_name );

    // Execute
    Print( "\tExecuting..." );
    string compgeom_resid = ExecAnalysis( compgeom_name );
    Print( "COMPLETE" );

    // Get & Display Results
    PrintResults( compgeom_resid );

    //==== Analysis: VSPAero Single Point ====//
    // Set defaults
    SetAnalysisInputDefaults( analysis_name );

    // Reference geometry set
    array< int > geom_set;
    geom_set.push_back( 0 );
    SetIntAnalysisInput( analysis_name, "GeomSet", geom_set, 0 );
    array< int > ref_flag;
    ref_flag.push_back( 1 );
    SetIntAnalysisInput( analysis_name, "RefFlag", ref_flag, 0 );
    array< string > wid = FindGeomsWithName( "WingGeom" );
    SetStringAnalysisInput( analysis_name, "WingID", wid, 0 );

    // Freestream Parameters
    double alpha_val = 10;
    array< double > alpha;
    alpha.push_back( alpha_val );
    SetDoubleAnalysisInput( analysis_name, "Alpha", alpha, 0 );

    double mach_val = 0.15;
    array< double > mach;
    mach.push_back( mach_val );
    SetDoubleAnalysisInput( analysis_name, "Mach", mach, 0 );

    Update();

    // list inputs, type, and current values
    PrintAnalysisInputs( analysis_name );
    Print( "" );

    // Execute
    Print( "\tExecuting..." );
    string rid = ExecAnalysis( analysis_name );
    Print( "COMPLETE" );
}
